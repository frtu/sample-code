# ======================================
# TOPOLOGY and EXTERNAL DEPENDENCIES
# ======================================
application:
  name: resilience-resilience4j

prefix:
  key1: value1

# ======================================
# Spring Boot
# ======================================
# https://resilience4j.readme.io/docs/getting-started-3
resilience4j.retry:
  instances:
    bridge:
      maxRetryAttempts: 3
      waitDuration: 250ms
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      resultPredicate: com.github.frtu.resilience.retry.RetryPredicate

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowType: COUNT_BASED              # Based on number of occurence only
      minimumNumberOfCalls: 100                   #The number of calls after which the error rate is calculated. I have assigned it with a small value for test purpose.
      failureRateThreshold: 60                    #The Threshold Percentage Above Which the Circuit Breaker will move from Closed to Open State.
      waitDurationInOpenState: 10000              #Time in milliseconds, in which the circuit breaker is to stay in open state before moving to half-open state
      permittedNumberOfCallsInHalfOpenState: 10
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
  instances:
    bridge:
      baseConfig: default
      waitDurationInOpenState: 5000
      minimumNumberOfCalls: 2                     #The number of calls after which the error rate is calculated. I have assigned it with a small value for test purpose.
      slidingWindowSize: 3

spring:
  application:
    name: ${application.name}
  main:
    # SERVLET or REACTIVE
    web-application-type: REACTIVE

# ======================================
# Management
# ======================================
server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus
          - retry
          - retryevents
          - circuitbreakers
          - circuitbreakerevents
#          - '*'

info:
  app:
    name: ${application.name}
    description: @project.description@
    version: @project.version@
    encoding: @project.build.sourceEncoding@
  java:
    version: @java.version@
