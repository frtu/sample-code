# http://docs.confluent.io/current/cp-docker-images/docs/configuration.html
# https://docs.confluent.io/current/installation/docker/docs/config-reference.html
---
version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0-2
    hostname: zookeeper
    ports:
      - "2181:2181"
#      - "38000-39900:38000-39900"
      - "51100-51500:51100-51500"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  broker:
    image: confluentinc/cp-kafka:5.0.0-2
    hostname: broker
    depends_on:
      zookeeper: { condition: service_healthy }
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # Based on https://rmoff.net/2018/08/02/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9093, EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Comment for manual creation
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9093
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'true'
#      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zookeeper:2181","--list"]
      interval: 10s
      timeout: 5s
      retries: 3

  schema_registry:
    image: confluentinc/cp-schema-registry:5.0.0-1
    hostname: schema_registry
    depends_on:
      broker: { condition: service_healthy }
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
#      SCHEMA_REGISTRY_DEBUG: "true"

  schema_registry_ui:
   image: landoop/schema-registry-ui:0.9.5
   hostname: schema_registry_ui
   ports:
     - "8001:8001"
   environment:
      PORT: 8001
      PROXY: 'true'
      SCHEMAREGISTRY_URL: 'http://schema_registry:8081'
      ALLOW_GLOBAL: 1
#      ALLOW_TRANSITIVE: 1
#      PROXY_SKIP_VERIFY: 'true'

# https://github.com/confluentinc/kafka-rest
# CORS PARAMS : https://github.com/apache/kafka/commit/eb823281a52f3b27c3a889e7412bc07b3024e688
  kafka_rest:
    image: confluentinc/cp-kafka-rest:5.0.0-1
    hostname: kafka_rest
    depends_on:
      - zookeeper
      - broker
      - schema_registry
    ports:
      - "8082:8082"
#    volumes:
#      - ./config/kafka-rest/:/etc/kafka-rest/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_REST_HOST_NAME: 'kafka_rest'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://broker:9093
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGN: '*'

# https://github.com/Landoop/kafka-topics-ui/tree/master/docker
# PROXY & /api/kafka-rest-proxy paramters
# https://github.com/Landoop/kafka-topics-ui/blob/e96bf2d3359aed76845c7e1512af950625945891/docker/run.sh#L29-L31
# FIX issues
# https://github.com/Landoop/kafka-topics-ui/issues/118
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    depends_on:
      - zookeeper
      - broker
      - schema_registry
      - kafka_rest
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      PROXY_SKIP_VERIFY: 'true'
      PROXY: 'true'
      KAFKA_REST_PROXY_URL: 'http://kafka_rest:8082'
      SCHEMAREGISTRY_UI_URL: http://schema_registry:8081
